@use '../variables/colors' as *;

// Transitions
@mixin transition($properties: all, $duration: 0.3s, $timing: ease) {
  transition: $properties $duration $timing;
}

// Drop shadow
@mixin drop-shadow($color, $blur: 2em) {
  filter: drop-shadow(0 0 $blur $color);
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Grid utilities
@mixin grid-auto-fit($min-width: 250px, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
  
  @supports not (gap: 1rem) {
    > * + * {
      margin-left: $gap;
    }
  }
}

@mixin grid-auto-fill($min-width: 250px, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
  
  @supports not (gap: 1rem) {
    > * + * {
      margin-left: $gap;
    }
  }
}

// Container utilities
@mixin container($max-width: 1280px, $padding: 1rem) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $padding;
  padding-right: $padding;
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visually hidden (accessible)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// Reset button
@mixin reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

// Reset list
@mixin reset-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

// Aspect ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  aspect-ratio: #{$width} / #{$height};
  
  @supports not (aspect-ratio: 1 / 1) {
    position: relative;
    
    &::before {
      content: '';
      display: block;
      padding-bottom: calc(#{$height} / #{$width} * 100%);
    }
    
    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}

// Focus ring for accessibility
@mixin focus-ring($color: var(--primary-color), $offset: 2px, $width: 2px) {
  outline: $width solid $color;
  outline-offset: $offset;
  border-radius: var(--border-radius);
}

// Skip link styles
@mixin skip-link {
  position: absolute;
  top: -40px;
  left: 0;
  background: var(--primary-color);
  color: var(--button-text);
  padding: 8px var(--spacing-md);
  text-decoration: none;
  border-radius: var(--border-radius);
  z-index: var(--z-tooltip);
  font-weight: var(--font-weight-medium);
  
  &:focus {
    top: 0;
  }
}

// Theme variables mixin
@mixin theme-variables($text-color, $text-muted, $bg-color, $bg-secondary, $bg-tertiary, $card-bg, $border-color, $button-bg, $button-text, $button-hover-bg, $doc-link-color, $link-hover-color, $code-bg, $code-text, $primary-hover) {
  // Text colors
  --text-color: #{$text-color};
  --text-muted: #{$text-muted};
  --text-accent: #{colors.$primary-color};

  // Background colors
  --bg-color: #{$bg-color};
  --bg-secondary: #{$bg-secondary};
  --bg-tertiary: #{$bg-tertiary};
  --card-bg: #{$card-bg};
  --border-color: #{$border-color};

  // Button colors
  --button-bg: #{$button-bg};
  --button-text: #{$button-text};
  --button-hover-bg: #{$button-hover-bg};

  // Link colors
  --doc-link-color: #{$doc-link-color};
  --link-hover-color: #{$link-hover-color};

  // Code colors
  --code-bg: #{$code-bg};
  --code-text: #{$code-text};

  // Primary colors
  --primary-color: #{colors.$primary-color};
  --primary-hover: #{$primary-hover};
  --shadow-vue: #{colors.$shadow-vue};
}

// New theme mixin to reduce duplication
@mixin theme($light: false) {
  @if $light {
    --text-color: #{$light-text-color};
    --text-muted: oklch(45% 0 0);
    --bg-color: #{$light-bg-color};
    --bg-secondary: oklch(90% 0 0);
    --bg-tertiary: oklch(98% 0 0);
    --card-bg: oklch(85% 0 0);
    --border-color: oklch(90% 0 0);
    --button-bg: #{$light-button-bg};
    --button-text: #{$light-button-text};
    --button-hover-bg: oklch(90% 0 0);
    --doc-link-color: #{$light-doc-link};
    --link-hover-color: oklch(35% 0.1 264);
    --code-bg: #{$light-code-bg};
    --code-text: oklch(25% 0 0);
    --primary-hover: #{$primary-hover-light};
  } @else {
    --text-color: #{$dark-text-color};
    --text-muted: oklch(65% 0 0);
    --bg-color: #{$dark-bg-color};
    --bg-secondary: oklch(20% 0 0);
    --bg-tertiary: oklch(25% 0 0);
    --card-bg: oklch(18% 0 0);
    --border-color: oklch(30% 0 0);
    --button-bg: #{$dark-button-bg};
    --button-text: #{$dark-button-text};
    --button-hover-bg: oklch(25% 0 0);
    --doc-link-color: #{$dark-doc-link};
    --link-hover-color: oklch(75% 0.1 264);
    --code-bg: #{$dark-code-bg};
    --code-text: oklch(90% 0 0);
    --primary-hover: #{$primary-hover-dark};
  }
  // Static properties
  --text-accent: #{$primary-color};
  --primary-color: #{$primary-color};
  --shadow-vue: #{$shadow-vue};
}