// Transitions
@mixin transition($property: all, $duration: 0.25s, $ease: ease) {
  transition: $property $duration $ease;
}

// Drop shadow
@mixin drop-shadow($color, $blur: 2em) {
  filter: drop-shadow(0 0 $blur $color);
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Grid utilities
@mixin grid-auto-fit($min-width: 250px, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
  
  @supports not (gap: 1rem) {
    > * + * {
      margin-left: $gap;
    }
  }
}

@mixin grid-auto-fill($min-width: 250px, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
  
  @supports not (gap: 1rem) {
    > * + * {
      margin-left: $gap;
    }
  }
}

// Container utilities
@mixin container($max-width: 1280px, $padding: 1rem) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $padding;
  padding-right: $padding;
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visually hidden (accessible)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// Reset button
@mixin reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

// Reset list
@mixin reset-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

// Aspect ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  aspect-ratio: #{$width} / #{$height};
  
  @supports not (aspect-ratio: 1 / 1) {
    position: relative;
    
    &::before {
      content: '';
      display: block;
      padding-bottom: calc(#{$height} / #{$width} * 100%);
    }
    
    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}